name: CI

on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: ipyannotator

jobs:
#  ghr_push:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build ipyannotator image
#        run: docker build -t $IMAGE_NAME .
#
#      - name: Log into GCR
#        run: echo "${{ secrets.REP_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Push ipyannotator image to GCR
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
#
#          # Change all uppercase to lowercase
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#
#          # Strip git ref prefix from version
#          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
#
#          # Strip "v" prefix from tag name
#          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
#
#          # Use Docker `latest` tag convention
#          [ "$VERSION" == "master" ] && VERSION=latest
#
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION
#  test_1:
#    name: "Read Notebooks"
#    runs-on: ubuntu-latest
#    needs: ghr_push
#
#    steps:
#      - name: Log into GCR
#        run: echo "${{ secrets.REP_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Pull image from DockerHub
#        run: docker pull ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup #  todo (AP): fix img-tag
#
#      - name: Run image in container
#        run: docker run --rm ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup /bin/bash -c "poetry run nbdev_read_nbs"
#
#  test_2:
#    name: "Check Notebooks Clean"
#    runs-on: ubuntu-latest
#    needs: ghr_push
#
#    steps:
#      - name: Log into GCR
#        run: echo "${{ secrets.REP_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Pull image from DockerHub
#        run: docker pull ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup
#
#      - name: Run image in container
#        run: docker run --rm ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup /bin/bash -c "./scripts/check_clean_nb.sh"
#
#  test_3:
#    name: "Check Notebooks - Lib Diff"
#    runs-on: ubuntu-latest
#    needs: ghr_push
#
#    steps:
#      - name: Log into GCR
#        run: echo "${{ secrets.REP_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Pull image from DockerHub
#        run: docker pull ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup
#
#      - name: Run image in container
#        run: docker run --rm ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup /bin/bash -c "./scripts/check_lib_diff.sh"
#
#  test_4:
#    name: "Run Notebooks tests"
#    runs-on: ubuntu-latest
#    needs: ghr_push
#
#    steps:
#      - name: Log into GCR
#        run: echo "${{ secrets.REP_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Pull image from DockerHub
#        run: docker pull ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup
#
#      - name: Run image in container
#        run: docker run --rm ghcr.io/alexjoz/ipyannotator/ipyannotator:github-setup /bin/bash -c "./scripts/test_nb.sh"

  multios_whl:
    name: "Build whls"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8 ]
        poetry-version: [1.0.5]
        os: [ ubuntu-18.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
#    needs: test_4

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: View poetry --help
        run: poetry --help
      - name: Build annotator whl
        run: poetry build -f wheel
      - name: Rename dir
        run: mv dist dist-${{ matrix.os }}-${{ matrix.python-version }}
      - name: Archive whls
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist-${{ matrix.os }}-${{ matrix.python-version }}

  release_whl:
    name: "Upload to pypi"
    runs-on: ubuntu-latest
    needs: multios_whl
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: abatilo/actions-poetry@v2.0.0
        with:
            poetry-version: 1.0.5
      - uses: actions/download-artifact@v2
      - name: Display downloaded
        run: ls -R
      - name: Upload
        run: poetry publish --build -r palaimon -u $POETRY_HTTP_BASIC_PYPI_USERNAME -p $POETRY_HTTP_BASIC_PYPI_PASSWORD
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.POETRY_HTTP_BASIC_PYPI_USERNAME }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.POETRY_HTTP_BASIC_PYPI_PASSWORD }}
          POETRY_REPOSITORIES_PALAIMON_URL: ${{ secrets.POETRY_REPOSITORIES_PALAIMON_URL }}
